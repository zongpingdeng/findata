/*
 * This file is generated by jOOQ.
*/
package com.cimc.datahub.mining.jooq.tables;


import com.cimc.datahub.mining.jooq.Basedata;
import com.cimc.datahub.mining.jooq.Keys;
import com.cimc.datahub.mining.jooq.tables.records.HkToMainlandRecord;

import java.sql.Date;
import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Identity;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.1"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class HkToMainland extends TableImpl<HkToMainlandRecord> {

    private static final long serialVersionUID = 1026006461;

    /**
     * The reference instance of <code>basedata.hk_to_mainland</code>
     */
    public static final HkToMainland HK_TO_MAINLAND = new HkToMainland();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<HkToMainlandRecord> getRecordType() {
        return HkToMainlandRecord.class;
    }

    /**
     * The column <code>basedata.hk_to_mainland.id</code>.
     */
    public final TableField<HkToMainlandRecord, Integer> ID = createField("id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>basedata.hk_to_mainland.hk_code</code>.
     */
    public final TableField<HkToMainlandRecord, String> HK_CODE = createField("hk_code", org.jooq.impl.SQLDataType.VARCHAR.length(100).nullable(false), this, "");

    /**
     * The column <code>basedata.hk_to_mainland.hk_name</code>.
     */
    public final TableField<HkToMainlandRecord, String> HK_NAME = createField("hk_name", org.jooq.impl.SQLDataType.VARCHAR.length(100).nullable(false), this, "");

    /**
     * The column <code>basedata.hk_to_mainland.code</code>.
     */
    public final TableField<HkToMainlandRecord, String> CODE = createField("code", org.jooq.impl.SQLDataType.VARCHAR.length(100).nullable(false), this, "");

    /**
     * The column <code>basedata.hk_to_mainland.name</code>.
     */
    public final TableField<HkToMainlandRecord, String> NAME = createField("name", org.jooq.impl.SQLDataType.VARCHAR.length(100).nullable(false), this, "");

    /**
     * The column <code>basedata.hk_to_mainland.amount</code>.
     */
    public final TableField<HkToMainlandRecord, Long> AMOUNT = createField("amount", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "");

    /**
     * The column <code>basedata.hk_to_mainland.percentage</code>.
     */
    public final TableField<HkToMainlandRecord, Double> PERCENTAGE = createField("percentage", org.jooq.impl.SQLDataType.DOUBLE.nullable(false), this, "");

    /**
     * The column <code>basedata.hk_to_mainland.event_date</code>.
     */
    public final TableField<HkToMainlandRecord, Date> EVENT_DATE = createField("event_date", org.jooq.impl.SQLDataType.DATE.nullable(false), this, "");

    /**
     * The column <code>basedata.hk_to_mainland.created_date</code>.
     */
    public final TableField<HkToMainlandRecord, Timestamp> CREATED_DATE = createField("created_date", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false), this, "");

    /**
     * The column <code>basedata.hk_to_mainland.modified_date</code>.
     */
    public final TableField<HkToMainlandRecord, Timestamp> MODIFIED_DATE = createField("modified_date", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false), this, "");

    /**
     * Create a <code>basedata.hk_to_mainland</code> table reference
     */
    public HkToMainland() {
        this("hk_to_mainland", null);
    }

    /**
     * Create an aliased <code>basedata.hk_to_mainland</code> table reference
     */
    public HkToMainland(String alias) {
        this(alias, HK_TO_MAINLAND);
    }

    private HkToMainland(String alias, Table<HkToMainlandRecord> aliased) {
        this(alias, aliased, null);
    }

    private HkToMainland(String alias, Table<HkToMainlandRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Basedata.BASEDATA;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<HkToMainlandRecord, Integer> getIdentity() {
        return Keys.IDENTITY_HK_TO_MAINLAND;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<HkToMainlandRecord> getPrimaryKey() {
        return Keys.KEY_HK_TO_MAINLAND_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<HkToMainlandRecord>> getKeys() {
        return Arrays.<UniqueKey<HkToMainlandRecord>>asList(Keys.KEY_HK_TO_MAINLAND_PRIMARY, Keys.KEY_HK_TO_MAINLAND_EVENT_DATA_CODE_IDX);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public HkToMainland as(String alias) {
        return new HkToMainland(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public HkToMainland rename(String name) {
        return new HkToMainland(name, null);
    }
}
