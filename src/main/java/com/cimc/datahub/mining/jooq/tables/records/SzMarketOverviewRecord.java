/*
 * This file is generated by jOOQ.
*/
package com.cimc.datahub.mining.jooq.tables.records;


import com.cimc.datahub.mining.jooq.tables.SzMarketOverview;

import java.sql.Date;
import java.sql.Timestamp;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record19;
import org.jooq.Row19;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.1"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class SzMarketOverviewRecord extends UpdatableRecordImpl<SzMarketOverviewRecord> implements Record19<Long, Double, Double, Double, Double, Integer, Integer, Long, Long, Long, Long, Long, Double, Double, Double, Double, Date, Timestamp, Timestamp> {

    private static final long serialVersionUID = -296164849;

    /**
     * Setter for <code>basedata.sz_market_overview.id</code>.
     */
    public void setId(Long value) {
        set(0, value);
    }

    /**
     * Getter for <code>basedata.sz_market_overview.id</code>.
     */
    public Long getId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>basedata.sz_market_overview.szcz_index</code>.
     */
    public void setSzczIndex(Double value) {
        set(1, value);
    }

    /**
     * Getter for <code>basedata.sz_market_overview.szcz_index</code>.
     */
    public Double getSzczIndex() {
        return (Double) get(1);
    }

    /**
     * Setter for <code>basedata.sz_market_overview.szzz_index</code>.
     */
    public void setSzzzIndex(Double value) {
        set(2, value);
    }

    /**
     * Getter for <code>basedata.sz_market_overview.szzz_index</code>.
     */
    public Double getSzzzIndex() {
        return (Double) get(2);
    }

    /**
     * Setter for <code>basedata.sz_market_overview.zxb_index</code>.
     */
    public void setZxbIndex(Double value) {
        set(3, value);
    }

    /**
     * Getter for <code>basedata.sz_market_overview.zxb_index</code>.
     */
    public Double getZxbIndex() {
        return (Double) get(3);
    }

    /**
     * Setter for <code>basedata.sz_market_overview.cyb_index</code>.
     */
    public void setCybIndex(Double value) {
        set(4, value);
    }

    /**
     * Getter for <code>basedata.sz_market_overview.cyb_index</code>.
     */
    public Double getCybIndex() {
        return (Double) get(4);
    }

    /**
     * Setter for <code>basedata.sz_market_overview.listed_companies</code>.
     */
    public void setListedCompanies(Integer value) {
        set(5, value);
    }

    /**
     * Getter for <code>basedata.sz_market_overview.listed_companies</code>.
     */
    public Integer getListedCompanies() {
        return (Integer) get(5);
    }

    /**
     * Setter for <code>basedata.sz_market_overview.listed_stocks</code>.
     */
    public void setListedStocks(Integer value) {
        set(6, value);
    }

    /**
     * Getter for <code>basedata.sz_market_overview.listed_stocks</code>.
     */
    public Integer getListedStocks() {
        return (Integer) get(6);
    }

    /**
     * Setter for <code>basedata.sz_market_overview.market_trade_amount</code>.
     */
    public void setMarketTradeAmount(Long value) {
        set(7, value);
    }

    /**
     * Getter for <code>basedata.sz_market_overview.market_trade_amount</code>.
     */
    public Long getMarketTradeAmount() {
        return (Long) get(7);
    }

    /**
     * Setter for <code>basedata.sz_market_overview.total_stock_count</code>.
     */
    public void setTotalStockCount(Long value) {
        set(8, value);
    }

    /**
     * Getter for <code>basedata.sz_market_overview.total_stock_count</code>.
     */
    public Long getTotalStockCount() {
        return (Long) get(8);
    }

    /**
     * Setter for <code>basedata.sz_market_overview.total_flow_stock_count</code>.
     */
    public void setTotalFlowStockCount(Long value) {
        set(9, value);
    }

    /**
     * Getter for <code>basedata.sz_market_overview.total_flow_stock_count</code>.
     */
    public Long getTotalFlowStockCount() {
        return (Long) get(9);
    }

    /**
     * Setter for <code>basedata.sz_market_overview.total_market_value</code>.
     */
    public void setTotalMarketValue(Long value) {
        set(10, value);
    }

    /**
     * Getter for <code>basedata.sz_market_overview.total_market_value</code>.
     */
    public Long getTotalMarketValue() {
        return (Long) get(10);
    }

    /**
     * Setter for <code>basedata.sz_market_overview.total_flow_market_value</code>.
     */
    public void setTotalFlowMarketValue(Long value) {
        set(11, value);
    }

    /**
     * Getter for <code>basedata.sz_market_overview.total_flow_market_value</code>.
     */
    public Long getTotalFlowMarketValue() {
        return (Long) get(11);
    }

    /**
     * Setter for <code>basedata.sz_market_overview.stock_trade_amount</code>.
     */
    public void setStockTradeAmount(Double value) {
        set(12, value);
    }

    /**
     * Getter for <code>basedata.sz_market_overview.stock_trade_amount</code>.
     */
    public Double getStockTradeAmount() {
        return (Double) get(12);
    }

    /**
     * Setter for <code>basedata.sz_market_overview.avg_stock_price</code>.
     */
    public void setAvgStockPrice(Double value) {
        set(13, value);
    }

    /**
     * Getter for <code>basedata.sz_market_overview.avg_stock_price</code>.
     */
    public Double getAvgStockPrice() {
        return (Double) get(13);
    }

    /**
     * Setter for <code>basedata.sz_market_overview.avg_pe</code>.
     */
    public void setAvgPe(Double value) {
        set(14, value);
    }

    /**
     * Getter for <code>basedata.sz_market_overview.avg_pe</code>.
     */
    public Double getAvgPe() {
        return (Double) get(14);
    }

    /**
     * Setter for <code>basedata.sz_market_overview.avg_turnover</code>.
     */
    public void setAvgTurnover(Double value) {
        set(15, value);
    }

    /**
     * Getter for <code>basedata.sz_market_overview.avg_turnover</code>.
     */
    public Double getAvgTurnover() {
        return (Double) get(15);
    }

    /**
     * Setter for <code>basedata.sz_market_overview.event_date</code>.
     */
    public void setEventDate(Date value) {
        set(16, value);
    }

    /**
     * Getter for <code>basedata.sz_market_overview.event_date</code>.
     */
    public Date getEventDate() {
        return (Date) get(16);
    }

    /**
     * Setter for <code>basedata.sz_market_overview.created_date</code>.
     */
    public void setCreatedDate(Timestamp value) {
        set(17, value);
    }

    /**
     * Getter for <code>basedata.sz_market_overview.created_date</code>.
     */
    public Timestamp getCreatedDate() {
        return (Timestamp) get(17);
    }

    /**
     * Setter for <code>basedata.sz_market_overview.modified_date</code>.
     */
    public void setModifiedDate(Timestamp value) {
        set(18, value);
    }

    /**
     * Getter for <code>basedata.sz_market_overview.modified_date</code>.
     */
    public Timestamp getModifiedDate() {
        return (Timestamp) get(18);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record1<Long> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record19 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row19<Long, Double, Double, Double, Double, Integer, Integer, Long, Long, Long, Long, Long, Double, Double, Double, Double, Date, Timestamp, Timestamp> fieldsRow() {
        return (Row19) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row19<Long, Double, Double, Double, Double, Integer, Integer, Long, Long, Long, Long, Long, Double, Double, Double, Double, Date, Timestamp, Timestamp> valuesRow() {
        return (Row19) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Long> field1() {
        return SzMarketOverview.SZ_MARKET_OVERVIEW.ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Double> field2() {
        return SzMarketOverview.SZ_MARKET_OVERVIEW.SZCZ_INDEX;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Double> field3() {
        return SzMarketOverview.SZ_MARKET_OVERVIEW.SZZZ_INDEX;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Double> field4() {
        return SzMarketOverview.SZ_MARKET_OVERVIEW.ZXB_INDEX;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Double> field5() {
        return SzMarketOverview.SZ_MARKET_OVERVIEW.CYB_INDEX;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field6() {
        return SzMarketOverview.SZ_MARKET_OVERVIEW.LISTED_COMPANIES;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field7() {
        return SzMarketOverview.SZ_MARKET_OVERVIEW.LISTED_STOCKS;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Long> field8() {
        return SzMarketOverview.SZ_MARKET_OVERVIEW.MARKET_TRADE_AMOUNT;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Long> field9() {
        return SzMarketOverview.SZ_MARKET_OVERVIEW.TOTAL_STOCK_COUNT;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Long> field10() {
        return SzMarketOverview.SZ_MARKET_OVERVIEW.TOTAL_FLOW_STOCK_COUNT;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Long> field11() {
        return SzMarketOverview.SZ_MARKET_OVERVIEW.TOTAL_MARKET_VALUE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Long> field12() {
        return SzMarketOverview.SZ_MARKET_OVERVIEW.TOTAL_FLOW_MARKET_VALUE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Double> field13() {
        return SzMarketOverview.SZ_MARKET_OVERVIEW.STOCK_TRADE_AMOUNT;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Double> field14() {
        return SzMarketOverview.SZ_MARKET_OVERVIEW.AVG_STOCK_PRICE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Double> field15() {
        return SzMarketOverview.SZ_MARKET_OVERVIEW.AVG_PE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Double> field16() {
        return SzMarketOverview.SZ_MARKET_OVERVIEW.AVG_TURNOVER;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Date> field17() {
        return SzMarketOverview.SZ_MARKET_OVERVIEW.EVENT_DATE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Timestamp> field18() {
        return SzMarketOverview.SZ_MARKET_OVERVIEW.CREATED_DATE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Timestamp> field19() {
        return SzMarketOverview.SZ_MARKET_OVERVIEW.MODIFIED_DATE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long value1() {
        return getId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Double value2() {
        return getSzczIndex();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Double value3() {
        return getSzzzIndex();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Double value4() {
        return getZxbIndex();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Double value5() {
        return getCybIndex();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value6() {
        return getListedCompanies();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value7() {
        return getListedStocks();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long value8() {
        return getMarketTradeAmount();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long value9() {
        return getTotalStockCount();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long value10() {
        return getTotalFlowStockCount();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long value11() {
        return getTotalMarketValue();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long value12() {
        return getTotalFlowMarketValue();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Double value13() {
        return getStockTradeAmount();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Double value14() {
        return getAvgStockPrice();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Double value15() {
        return getAvgPe();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Double value16() {
        return getAvgTurnover();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Date value17() {
        return getEventDate();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Timestamp value18() {
        return getCreatedDate();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Timestamp value19() {
        return getModifiedDate();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public SzMarketOverviewRecord value1(Long value) {
        setId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public SzMarketOverviewRecord value2(Double value) {
        setSzczIndex(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public SzMarketOverviewRecord value3(Double value) {
        setSzzzIndex(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public SzMarketOverviewRecord value4(Double value) {
        setZxbIndex(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public SzMarketOverviewRecord value5(Double value) {
        setCybIndex(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public SzMarketOverviewRecord value6(Integer value) {
        setListedCompanies(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public SzMarketOverviewRecord value7(Integer value) {
        setListedStocks(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public SzMarketOverviewRecord value8(Long value) {
        setMarketTradeAmount(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public SzMarketOverviewRecord value9(Long value) {
        setTotalStockCount(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public SzMarketOverviewRecord value10(Long value) {
        setTotalFlowStockCount(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public SzMarketOverviewRecord value11(Long value) {
        setTotalMarketValue(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public SzMarketOverviewRecord value12(Long value) {
        setTotalFlowMarketValue(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public SzMarketOverviewRecord value13(Double value) {
        setStockTradeAmount(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public SzMarketOverviewRecord value14(Double value) {
        setAvgStockPrice(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public SzMarketOverviewRecord value15(Double value) {
        setAvgPe(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public SzMarketOverviewRecord value16(Double value) {
        setAvgTurnover(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public SzMarketOverviewRecord value17(Date value) {
        setEventDate(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public SzMarketOverviewRecord value18(Timestamp value) {
        setCreatedDate(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public SzMarketOverviewRecord value19(Timestamp value) {
        setModifiedDate(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public SzMarketOverviewRecord values(Long value1, Double value2, Double value3, Double value4, Double value5, Integer value6, Integer value7, Long value8, Long value9, Long value10, Long value11, Long value12, Double value13, Double value14, Double value15, Double value16, Date value17, Timestamp value18, Timestamp value19) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        value9(value9);
        value10(value10);
        value11(value11);
        value12(value12);
        value13(value13);
        value14(value14);
        value15(value15);
        value16(value16);
        value17(value17);
        value18(value18);
        value19(value19);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached SzMarketOverviewRecord
     */
    public SzMarketOverviewRecord() {
        super(SzMarketOverview.SZ_MARKET_OVERVIEW);
    }

    /**
     * Create a detached, initialised SzMarketOverviewRecord
     */
    public SzMarketOverviewRecord(Long id, Double szczIndex, Double szzzIndex, Double zxbIndex, Double cybIndex, Integer listedCompanies, Integer listedStocks, Long marketTradeAmount, Long totalStockCount, Long totalFlowStockCount, Long totalMarketValue, Long totalFlowMarketValue, Double stockTradeAmount, Double avgStockPrice, Double avgPe, Double avgTurnover, Date eventDate, Timestamp createdDate, Timestamp modifiedDate) {
        super(SzMarketOverview.SZ_MARKET_OVERVIEW);

        set(0, id);
        set(1, szczIndex);
        set(2, szzzIndex);
        set(3, zxbIndex);
        set(4, cybIndex);
        set(5, listedCompanies);
        set(6, listedStocks);
        set(7, marketTradeAmount);
        set(8, totalStockCount);
        set(9, totalFlowStockCount);
        set(10, totalMarketValue);
        set(11, totalFlowMarketValue);
        set(12, stockTradeAmount);
        set(13, avgStockPrice);
        set(14, avgPe);
        set(15, avgTurnover);
        set(16, eventDate);
        set(17, createdDate);
        set(18, modifiedDate);
    }
}
