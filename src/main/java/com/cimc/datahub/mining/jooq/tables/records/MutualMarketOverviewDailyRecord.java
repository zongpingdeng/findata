/*
 * This file is generated by jOOQ.
*/
package com.cimc.datahub.mining.jooq.tables.records;


import com.cimc.datahub.mining.jooq.tables.MutualMarketOverviewDaily;

import java.sql.Date;
import java.sql.Timestamp;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record13;
import org.jooq.Row13;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.1"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class MutualMarketOverviewDailyRecord extends UpdatableRecordImpl<MutualMarketOverviewDailyRecord> implements Record13<Long, Double, Double, Double, Long, Long, Long, Double, Double, Date, Timestamp, Timestamp, String> {

    private static final long serialVersionUID = 1504484224;

    /**
     * Setter for <code>basedata.mutual_market_overview_daily.id</code>.
     */
    public void setId(Long value) {
        set(0, value);
    }

    /**
     * Getter for <code>basedata.mutual_market_overview_daily.id</code>.
     */
    public Long getId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>basedata.mutual_market_overview_daily.total_amount</code>. 买入及卖出成交额 (RMB mil)
     */
    public void setTotalAmount(Double value) {
        set(1, value);
    }

    /**
     * Getter for <code>basedata.mutual_market_overview_daily.total_amount</code>. 买入及卖出成交额 (RMB mil)
     */
    public Double getTotalAmount() {
        return (Double) get(1);
    }

    /**
     * Setter for <code>basedata.mutual_market_overview_daily.buy_amount</code>. 买入成交额 (RMB mil)
     */
    public void setBuyAmount(Double value) {
        set(2, value);
    }

    /**
     * Getter for <code>basedata.mutual_market_overview_daily.buy_amount</code>. 买入成交额 (RMB mil)
     */
    public Double getBuyAmount() {
        return (Double) get(2);
    }

    /**
     * Setter for <code>basedata.mutual_market_overview_daily.sell_amount</code>. 卖出成交额 (RMB mil)
     */
    public void setSellAmount(Double value) {
        set(3, value);
    }

    /**
     * Getter for <code>basedata.mutual_market_overview_daily.sell_amount</code>. 卖出成交额 (RMB mil)
     */
    public Double getSellAmount() {
        return (Double) get(3);
    }

    /**
     * Setter for <code>basedata.mutual_market_overview_daily.total_count</code>. 买入及卖出成交数目
     */
    public void setTotalCount(Long value) {
        set(4, value);
    }

    /**
     * Getter for <code>basedata.mutual_market_overview_daily.total_count</code>. 买入及卖出成交数目
     */
    public Long getTotalCount() {
        return (Long) get(4);
    }

    /**
     * Setter for <code>basedata.mutual_market_overview_daily.buy_count</code>. 买入成交数目
     */
    public void setBuyCount(Long value) {
        set(5, value);
    }

    /**
     * Getter for <code>basedata.mutual_market_overview_daily.buy_count</code>. 买入成交数目
     */
    public Long getBuyCount() {
        return (Long) get(5);
    }

    /**
     * Setter for <code>basedata.mutual_market_overview_daily.sell_count</code>. 卖出成交数目
     */
    public void setSellCount(Long value) {
        set(6, value);
    }

    /**
     * Getter for <code>basedata.mutual_market_overview_daily.sell_count</code>. 卖出成交数目
     */
    public Long getSellCount() {
        return (Long) get(6);
    }

    /**
     * Setter for <code>basedata.mutual_market_overview_daily.dqb</code>. 每日额度余额(RMB mil)
     */
    public void setDqb(Double value) {
        set(7, value);
    }

    /**
     * Getter for <code>basedata.mutual_market_overview_daily.dqb</code>. 每日额度余额(RMB mil)
     */
    public Double getDqb() {
        return (Double) get(7);
    }

    /**
     * Setter for <code>basedata.mutual_market_overview_daily.dqb_percentage</code>. 每日额度余额(%)
     */
    public void setDqbPercentage(Double value) {
        set(8, value);
    }

    /**
     * Getter for <code>basedata.mutual_market_overview_daily.dqb_percentage</code>. 每日额度余额(%)
     */
    public Double getDqbPercentage() {
        return (Double) get(8);
    }

    /**
     * Setter for <code>basedata.mutual_market_overview_daily.event_date</code>.
     */
    public void setEventDate(Date value) {
        set(9, value);
    }

    /**
     * Getter for <code>basedata.mutual_market_overview_daily.event_date</code>.
     */
    public Date getEventDate() {
        return (Date) get(9);
    }

    /**
     * Setter for <code>basedata.mutual_market_overview_daily.created_date</code>.
     */
    public void setCreatedDate(Timestamp value) {
        set(10, value);
    }

    /**
     * Getter for <code>basedata.mutual_market_overview_daily.created_date</code>.
     */
    public Timestamp getCreatedDate() {
        return (Timestamp) get(10);
    }

    /**
     * Setter for <code>basedata.mutual_market_overview_daily.modified_date</code>.
     */
    public void setModifiedDate(Timestamp value) {
        set(11, value);
    }

    /**
     * Getter for <code>basedata.mutual_market_overview_daily.modified_date</code>.
     */
    public Timestamp getModifiedDate() {
        return (Timestamp) get(11);
    }

    /**
     * Setter for <code>basedata.mutual_market_overview_daily.flow_type</code>.
     */
    public void setFlowType(String value) {
        set(12, value);
    }

    /**
     * Getter for <code>basedata.mutual_market_overview_daily.flow_type</code>.
     */
    public String getFlowType() {
        return (String) get(12);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record1<Long> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record13 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row13<Long, Double, Double, Double, Long, Long, Long, Double, Double, Date, Timestamp, Timestamp, String> fieldsRow() {
        return (Row13) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row13<Long, Double, Double, Double, Long, Long, Long, Double, Double, Date, Timestamp, Timestamp, String> valuesRow() {
        return (Row13) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Long> field1() {
        return MutualMarketOverviewDaily.MUTUAL_MARKET_OVERVIEW_DAILY.ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Double> field2() {
        return MutualMarketOverviewDaily.MUTUAL_MARKET_OVERVIEW_DAILY.TOTAL_AMOUNT;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Double> field3() {
        return MutualMarketOverviewDaily.MUTUAL_MARKET_OVERVIEW_DAILY.BUY_AMOUNT;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Double> field4() {
        return MutualMarketOverviewDaily.MUTUAL_MARKET_OVERVIEW_DAILY.SELL_AMOUNT;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Long> field5() {
        return MutualMarketOverviewDaily.MUTUAL_MARKET_OVERVIEW_DAILY.TOTAL_COUNT;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Long> field6() {
        return MutualMarketOverviewDaily.MUTUAL_MARKET_OVERVIEW_DAILY.BUY_COUNT;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Long> field7() {
        return MutualMarketOverviewDaily.MUTUAL_MARKET_OVERVIEW_DAILY.SELL_COUNT;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Double> field8() {
        return MutualMarketOverviewDaily.MUTUAL_MARKET_OVERVIEW_DAILY.DQB;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Double> field9() {
        return MutualMarketOverviewDaily.MUTUAL_MARKET_OVERVIEW_DAILY.DQB_PERCENTAGE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Date> field10() {
        return MutualMarketOverviewDaily.MUTUAL_MARKET_OVERVIEW_DAILY.EVENT_DATE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Timestamp> field11() {
        return MutualMarketOverviewDaily.MUTUAL_MARKET_OVERVIEW_DAILY.CREATED_DATE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Timestamp> field12() {
        return MutualMarketOverviewDaily.MUTUAL_MARKET_OVERVIEW_DAILY.MODIFIED_DATE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field13() {
        return MutualMarketOverviewDaily.MUTUAL_MARKET_OVERVIEW_DAILY.FLOW_TYPE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long value1() {
        return getId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Double value2() {
        return getTotalAmount();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Double value3() {
        return getBuyAmount();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Double value4() {
        return getSellAmount();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long value5() {
        return getTotalCount();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long value6() {
        return getBuyCount();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long value7() {
        return getSellCount();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Double value8() {
        return getDqb();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Double value9() {
        return getDqbPercentage();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Date value10() {
        return getEventDate();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Timestamp value11() {
        return getCreatedDate();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Timestamp value12() {
        return getModifiedDate();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value13() {
        return getFlowType();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public MutualMarketOverviewDailyRecord value1(Long value) {
        setId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public MutualMarketOverviewDailyRecord value2(Double value) {
        setTotalAmount(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public MutualMarketOverviewDailyRecord value3(Double value) {
        setBuyAmount(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public MutualMarketOverviewDailyRecord value4(Double value) {
        setSellAmount(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public MutualMarketOverviewDailyRecord value5(Long value) {
        setTotalCount(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public MutualMarketOverviewDailyRecord value6(Long value) {
        setBuyCount(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public MutualMarketOverviewDailyRecord value7(Long value) {
        setSellCount(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public MutualMarketOverviewDailyRecord value8(Double value) {
        setDqb(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public MutualMarketOverviewDailyRecord value9(Double value) {
        setDqbPercentage(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public MutualMarketOverviewDailyRecord value10(Date value) {
        setEventDate(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public MutualMarketOverviewDailyRecord value11(Timestamp value) {
        setCreatedDate(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public MutualMarketOverviewDailyRecord value12(Timestamp value) {
        setModifiedDate(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public MutualMarketOverviewDailyRecord value13(String value) {
        setFlowType(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public MutualMarketOverviewDailyRecord values(Long value1, Double value2, Double value3, Double value4, Long value5, Long value6, Long value7, Double value8, Double value9, Date value10, Timestamp value11, Timestamp value12, String value13) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        value9(value9);
        value10(value10);
        value11(value11);
        value12(value12);
        value13(value13);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached MutualMarketOverviewDailyRecord
     */
    public MutualMarketOverviewDailyRecord() {
        super(MutualMarketOverviewDaily.MUTUAL_MARKET_OVERVIEW_DAILY);
    }

    /**
     * Create a detached, initialised MutualMarketOverviewDailyRecord
     */
    public MutualMarketOverviewDailyRecord(Long id, Double totalAmount, Double buyAmount, Double sellAmount, Long totalCount, Long buyCount, Long sellCount, Double dqb, Double dqbPercentage, Date eventDate, Timestamp createdDate, Timestamp modifiedDate, String flowType) {
        super(MutualMarketOverviewDaily.MUTUAL_MARKET_OVERVIEW_DAILY);

        set(0, id);
        set(1, totalAmount);
        set(2, buyAmount);
        set(3, sellAmount);
        set(4, totalCount);
        set(5, buyCount);
        set(6, sellCount);
        set(7, dqb);
        set(8, dqbPercentage);
        set(9, eventDate);
        set(10, createdDate);
        set(11, modifiedDate);
        set(12, flowType);
    }
}
